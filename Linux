linux常用的命令
1. 显示目录文件命令：ls（list；/bin/ls）
   语法：ls 选项 【-ald】【文件或目录】
   -a 显示所有文件，包括隐藏文件
   -l 详情信息显示
   -d 仅显示目录名，而不显示目录下的内容列表
   -h 人性化显示（hommization）
   -i 查看任意一个文件的i节点（类似于身份证唯一信息）
   -t 用文件和目录更改时间排序；可以用第一个显示的文件判断最近修改的文件
   注意：.开头的文件除非是目录，否则就是隐藏文件
   
2. 创建目录命令: mkdir(make directories; /bin/mkdir)
   语法：mkdir 【-p】 【目录名】
   -p 递归创建（可以创建不存在的目录）
   eg：创建单个目录: mkdir /tmp/vae.txt
       创建多个目录：mkdir /tmp/a.txt /tmp/b.txt
       注意： 1、创建的目录已经存在, 那么 Linux 会提示我们 Linux 无法创建它。
              2、不带任何参数运行 mkdir 命令会在当前目录下创建目录。
              3、不带上-p,如果新建的文件上级目录不存在则不会执行成功
              4、创建目录的首要条件是， 在想要创建目录的目标路径下你必须具有访问权限。
            
3. 切换目录命令：cd（change directory; shell）
   语法：cd 【目录名】
   
4. shell内置命令和外部命令的区别
   ls命令和mkdir命令都有命令的所在路径，而cd命令我们说是shell内置命令。这两者便是Linux内置命令和外部命令。内部命令实际上是shell程序的一
   部分，其中包含的是一些比较简单的linux系统命令，这些命令由shell程序识别并在shell程序内部完成运行，通常在linux系统加载运行时shell就被加
   载并驻留在系统内存中。内部命令是写在bashy源码里面的，其执行速度比外部命令快，因为解析内部命令shell不需要创建子进程。比如：exit，history，
   cd，echo等。外部命令是linux系统中的实用程序部分，因为实用程序的功能通常都比较强大，所以其包含的程序量也会很大，在系统加载时并不随系统一起
   被加载到内存中，而是在需要时才将其调用内存。通常外部命令的实体并不包含在shell中，但是其命令执行过程是由shell程序控制的。shell程序管理外部
   命令执行的路径查找、加载存放，并控制命令的执行。外部命令是在bash之外额外安装的，通常放在/bin，/usr/bin，/sbin，/usr/sbin......等等。可通
   过“echo $PATH”命令查看外部命令的存储路径，比如：ls、vi等。
   用type命令可以分辨内部命令与外部命令：
   eg：type ls
   
5. 显示当前目录命令：pwd（print working directory; /bin/pwd）
   语法：pwd

6. 删除空目录命令：rmdir（remove empty directories; /bin/rmdir）
   语法：rmdir【空目录的名称】
   注意：目录不为空不能删除
   
7. 复制文件或目录命令：cp（copy；/bin/cp）
   语法：cp -rp 【原文件或目录】 【目标目录】
            -r 复制目录
            -p 保留文件属性
   注意：复制目录的时候要加 -r选项。加-p属性之后会将原文件的一些属性比如修改时间等也原封不动的复制过去。如果不加-p属性，
   那么复制后的文件修改时间为当前系统时间。

8. 剪切文件或目录命令：mv（move；/bin/mv）
   语法：mv 【原文件或目录】 【目标目录】
   
9. 删除文件或目录命令：rm（remove；/bin/rm）
   语法：rm -rf 【文件或目录】
            -r 删除目录
            -f 强制执行

10. 创建空文件命令：touch（/bin/touch）
    语法：touch 【文件名】
    注意：创建文件时，文件名不要有空格，不然就是创建了两个文件touch progrom files这是创建了两个文件，progrom和files,
    如果我们想创建一个文件名为 progrom files ，应该用引号括起来(尽量避免文件名包含空格)
    
11. 显示文件内容命令（适合内容较少的文件）：cat（/bin/cat）
    语法：cat 【文件名】
          -n显示文件行号
    注意：此命令只能显示文件内容比较少的文件，如果文件内容很多，用cat命令是不合适的，视觉效果是屏幕不断滚动更新。

12. 反向显示文件内容命令（适合内容较少的文件）：tac(/bin/cat)
    语法：tac 【文件名】

13. 分页显示文件内容命令（不能向前翻页）：more（/bin/more）
    语法：more 【文件名】
    （空格）或f翻页（一页一页往后显示）
    （Enter）换行（一行一行往后显示）
    q或Q退出

14. 分页显示文件内容命令（可以前后翻页）：less（/usr/bin/less）
    语法：less 【文件名】
    （空格）或f或PgDn翻页（一页一页往后显示）
     PgUp向前翻页
     （Enter）换行或向下箭头键（一行一行往后显示）
     向上箭头键（一行一行往前显示）
     q或Q退出
     输入/想搜索的字符，然后回车键可以查询匹配的信息
     
15. 显示文件内容命令（指定行数）：head
    语法：head 【文件名】
    -n 指定显示的行数
    不加 -n 默认显示前20行数据

16. 反向文件内容命令（文件即时更新后也能动态显示，多用于日志文件显示）：tail
    语法：tail 【文件名】
    -n 指定显示的行数
    -f 动态显示文件末尾内容（即文件实时变化，那么显示内容也会随之变化）
    注意：如果我们想结束加上 -f显示的tail命令，通过 Ctrl+C。

Linux用户管理命令
1. 帮助命令：man（manual；/usr/bin/man）
   功能：获得帮助信息
   语法：man 【命令或配置文件】

2. 获得shell内置命令的帮助信息：help（shell内置命令）
   功能：获得shell内置命令帮助信息
   语法：help 【shell内置命令】
   
3. 简单查看命令的帮助信息：--help
   语法：【命令】 --help
   
4. 添加新用户：useradd（/usr/sbin/useradd）
   功能：添加新用户
   语法：useradd 【用户名】
   
5. 设置用户密码：passwd（/usr/bin/passwd）
   功能：修改用户的密码
   语法：passwd 【用户名】

6. 查看登录用户简单信息：who（/usr/bin/who）
   功能：查看登录用户简单信息
   语法：who
   
7. 查看登录用户详情信息：w（/usr/bin/w）
   功能：查看登录用户详情信息
   语法：w
   
Linux链接命令
1. 生成链接文件命令：ln（link；/bin/link）
   功能：生成链接文件
   语法：ln -s 【源文件】 【目标文件】
         -s 创建软连接
         不加-s 创建硬链接
         软连接是相当于快捷方式
         硬链接相当于copy且同步更新
         ls -i 软连接节点i不相同，硬链接相同

Linux权限管理命令
1. 更改文件或目录权限：chmod（change the permissions mode of a file；/bin/chmod）
   功能：改变文件或目录权限
   语法：chmod 【{ugoa}{+-=}{rwx}】【文件或目录】
         【mode=421】 【文件或目录】 （r=4，w=2，x=1）
         -R 递归修改

2. 改变文件或目录所有者命令：chown（change file ownership；/bin/chown）
   功能：改变文件或目录所有者
   语法：chmod 【用户】 【文件或目录】

3. 改变文件或目录所属组命令：chgrp（change file group ownership;/bin/chown）
   功能：改变文件或目录所属组
   语法：chgrp 【用户组】 【文件或目录】

Linux解压和压缩命令
压缩解压格式.gz：
1. 压缩：gzip（GNU zip；/bin/gzip）（不保留原目录）
   功能：压缩文件，压缩后格式为.gz
   语法：gzip 【需要压缩的文件】

2. 解压：gunzip（GNU unzip；/bin/gunzip）（不保留原目录）
   功能：将格式为.gz的压缩文件解压
   语法：gunzip 【压缩文件名】

压缩解压格式.tar.gz：
1. 压缩：tar（/bin/tar）（保留原目录）
   功能：将文件压缩为.tar.gz格式
   语法：tar 【-zcf】 【压缩后文件名】 【-C】 【目录】
         -c 打包
         -v 显示详细信息
         -f 指定文件名
         -z 打包同时压缩

2. 解压：tar（/bin/tar）（保留原目录）
   功能：将格式为.tar.gz的压缩文件解压
   语法：tar 【-zxf】 【.tar.gz的压缩文件名】 【-C】 【目录】
         -x 解包
         -v 显示详细信息
         -f 指定解压文件名
         -z 解压缩

压缩解压格式.zip：
1. 压缩：zip（/usr/bin/zip）（保留原目录）
   功能：将文件或者目录压缩为.zip格式
   语法：zip 选项【-r】 【压缩后文件名】 【文件或目录】
         -r 压缩目录

2. 解压：unzip（/usr/bin/unzip）（保留原目录）
   功能：将格式为.zip的压缩文件解压
   语法：unzip 【.zip的压缩文件名】
   
压缩解压格式.bz2:
1. 压缩：bzip（/usr/bin/bzip2）
   功能：将文件压缩为.bz2格式
   语法：bzip2 选项【-k】 【文件】
         -k 产生压缩文件后保留文件

2. 解压：bunzip2（/usr/bin/bunzip2）
   功能：将格式为.bz2的压缩文件解压
   语法：bunzip2 选项【-k】 【压缩文件】
         -k 解压缩文件后保留原文件

vi编辑器
vim工作模式：命令模式（输入vi 【文件名】进入） 插入模式（在命令模式下输入i a o进入插入模式，按ESC回到命令模式） 编辑模式
插入命令：
a 在光标所在字符后插入
A 在光标所在行尾插入
i 在光标所在字符前插入
I 在光标所在行行首插入
o 在光标下插入新行
O 在光标上插入新行
定位命令：
:set nu   设置行号
:set nonu 取消行号
gg        到第一行
G         到最后一行
nG        到第n行
:n        到第n行
$         移至行尾
0         移至行首
删除命令：
x  删除光标所在字符
nx 删除光标所在处后n个字符
dd 删除光标所在行，ndd删除n行
dG 删除光标所在行到文件末尾内容
D  删除光标所在处到行尾内容
:n1,n2d 删除指定范围行
复制和剪切命令：
yy  复制当前行
nyy 复制当前行以下n行
dd  剪切当前行
ndd 剪切当前行以下n行
p、P粘贴在当前光标所在行下或行上
替换和取消命令：
r  取代光标所在处字符
R  从光标所在处开始替换字符，按ESC结束
u  取消上一步操作
搜索和搜索替换命令：
/string  搜索指定字符串（:set ic搜索时忽略大小写）
n 搜索指定字符串的下一个出现位置
:%s/old/new/g 全文替换指定字符串
:n1,n2s/old/new/g 在一定范围内替换指定字符串
保存和退出命令：
:w 保存修改
:w new_filename 另存为指定文件
:wq 保存修改并退出
ZZ 快捷键,保存修改并退出
:q! 不保存修改退出
:wq! 保存修改并退出（文件所有者及root可使用）

更新Ubuntu源：
sudo apt-get update
安装pip3：
sudo apt install python3-pip

安装mysql：
sudo apt-get install mysql-server
sudo apt-get install mysql-client
sudo apt-get install libmysqlclient-dev
安装成功后可以通过下面的命令测试是否安装成功：
sudo netstat -tap | grep mysql
没有netstat的话先执行下面的语句再执行上面的
sudo apt install net-tools
登录mysql：
mysql -u用户名 -p密码
修改mysql用户名和密码：
show databases;
use mysql;
update user set authentication_string=PASSWORD("自定义密码")where user='root';
update user set plugin="mysql_native_password";
flush privileges;
quit;
修改完密码，需要重启mysql
sudo /etc/init.d/mysql restart;
远程登录配置：
cd /etc/mysql/mysql.conf.d
sudo vi mysqld.conf
注释掉bind-address=127.0.0.1
添加用户
GRANT ALL PRIVILEGES ON *.* TO pythonuser@"%" IDENTIFIED BY "123456";
flush privileges;
需要重启mysql：

安装flask：
pip3 install flask
查看flask是否安装成功：
python
from flask import Flask
不报错就成功
测试flask项目：
导入flask项目然后
python3 app.py runserver

安装gunicorn
安装虚拟环境：sudo apt-get install python3-venv（在项目目录中操作）
创建虚拟环境：mkdir venv;python3 -m venv venv;source venv/bin/activate
安装gunicorn：pip3 install gunicorn
在flask项目中找到app.py
gunicorn -w 4 -b 0.0.0.0:8000 app:app（app:app 前者代表启动程序文件名， 后者为实例化对象命名即 app = Flask(__name__)）
-w 后面是线程数
-b 后面是ip和端口
退出虚拟环境：deactivate

安装nginx
Nginx用法：
1. 反向代理：
   是Nginx做的最多的一件事，是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回
   给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。简单来说就是真实的服务器不能直接被外部网络访问，所以需要一
   台代理服务器，而代理服务器能被外部网络访问的同时又跟真实服务器在同一个网络环境，当然也可能是同一台服务器，端口不同而已。
2. 负载均衡：
   是Nginx常用的一个功能，意思就是分摊到多个操作单元上进行执行，例如Web服务器、FTP服务器、企业关键应用服务器和其它关键任务服务器等，
   从而共同完成工作任务。简单而言就是当有2台或以上服务器时，根据规则随机的将请求分发到指定的服务器上处理，负载均衡配置一般都需要同时
   配置反向代理，通过反向代理跳转到负载均衡。而Nginx目前支持自带3种负载均衡策略，还有2种常用的第三方策略。
3. http服务器：
   Nginx本身也是一个静态资源的服务器，当只有静态资源的时候，就可以使用Nginx来做服务器，同时现在也很流行动静分离，就可以通过Nginx来实现。
4. 正向代理：
   意思是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，
   然后代理向原始服务器转交请求并将获得的内容返回给客户端。客户端才能使用正向代理。当你需要把你的服务器作为代理服务器的时候，可以用Nginx
   来实现正向代理。

shell的意义：
1. 程序执行前
